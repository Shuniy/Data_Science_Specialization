library(knitr)
library(rmarkdown)
install.packages(c("PerformanceAnalytics", "rlang"))
library(abind)
detach("package:abind", unload = TRUE)
install.packages("knitr")
install.packages("rmarkdown")
library(rmarkdown)
library(knitr)
install.packages("knitr")
library(rmarkdown)
install.packages("rmarkdown")
library(rmarkdown)
library(knitr)
knitr::opts_chunk$set(warning = FALSE, message = FALSE,echo = TRUE)
ActualCI<- AnalyticalMean + c(-1,1) * 1.96 * StandardDeviation/sqrt(n)
knitr::opts_chunk$set(warning = FALSE, message = FALSE,echo = TRUE)
#Setting Seed
set.seed(1)
#Setting lambda to 0.2
lambda <- 0.2
#We need 40 Exponents
n <- 40
#1000 Simulations
simulations <- 1000
Exponentials <- replicate(simulations, rexp(n, rate = lambda))
ExponentialsMean <- apply(Exponentials, 2, mean)
AnalyticalMean <- mean(ExponentialsMean)
AnalyticalMean
TheoryMean <- 1/lambda
TheoryMean
#Standard Deviation of distribution.
StandardDeviation <- sd(ExponentialsMean)
StandardDeviation
TheoryStandardDeviation <- (1/lambda)/sqrt(n)
TheoryStandardDeviation
Variance <- StandardDeviation^2
Variance
TheoryVariance <- ((1/lambda)*(1/sqrt(n)))^2
TheoryVariance
hist(ExponentialsMean, xlab = "mean", main = "Exponential Simulations")
abline(v = AnalyticalMean, col = "red")
abline(v = TheoryMean, col = "blue")
X <- seq(min(ExponentialsMean), max(ExponentialsMean), length.out = 200)
Y <- dnorm(X, mean = TheoryMean, sd = TheoryStandardDeviation)
hist(ExponentialsMean, breaks = n, prob = TRUE, col = "wheat", xlab = "Means",
main="Density of Means", ylab="Density")
lines(X, Y, col="black", lty=1)
abline(v = TheoryMean, col = "red")
TheoryCI<- TheoryMean + c(-1,1) * 1.96 * TheoryStandardDeviation/sqrt(n)
TheoryCI
ActualCI<- AnalyticalMean + c(-1,1) * 1.96 * StandardDeviation/sqrt(n)
ActualCI
library(tinytex)
tinytex::install_tinytex()
library(tinytex)
library(rmarkdown)
library(knitr)
library(datasets)
library(ggplot2)
data("ToothGrowth")
dim(ToothGrowth)
summary(ToothGrowth)
qplot(x = supp, y = len, data = ToothGrowth, facets = ~ dose,
main = "Tooth Growth by Supplement Type and Dosage", xlab="Supplement",
ylab = "Length of Tooth") + geom_boxplot(aes(fill = supp))
---
title: " Analyzing the ToothGrowth data in the R datasets package"
output:
pdf_document : default
html_document:
keep_md: TRUE
---
```{r setup}
knitr::opts_chunk$set(warning = FALSE, message = FALSE,echo = TRUE)
```
# 1. Load the ToothGrowth data and perform some basic exploratory data analyses.
## Loading Libraries and dataset
```{r,echo=TRUE}
library(ggplot2)
library(datasets)
data("ToothGrowth")
```
# 2. Provide a basic summary of the data.
## Taking look at data and finding unique identity for analysis.
```{r, echo=TRUE}
dim(ToothGrowth)
summary(ToothGrowth)
unique(ToothGrowth$dose)
```
## Making Boxplot of the Toothdata.
```{r, echo=TRUE}
qplot(x = supp, y = len, data = ToothGrowth, facets = ~ dose,
main = "Tooth Growth by Supplement Type and Dosage", xlab="Supplement",
ylab = "Length of Tooth") + geom_boxplot(aes(fill = supp))
```
## Subsetting data according to Doses.
```{r,echo=TRUE}
Dose0.5 <- subset.data.frame(x = ToothGrowth, dose == 0.5)
Dose1.0 <- subset.data.frame(x = ToothGrowth, dose == 1.0)
Dose2.0 <- subset.data.frame(x = ToothGrowth, dose == 2.0)
```
# 3. Use confidence intervals and/or hypothesis tests to compare tooth growth by supp and dose. (Only use the techniques from class, even if there's other approaches worth considering)
## Applying T.test on the data according to Doses and then Tooth table.
## T.test on the data with 0.5 Dose
```{r, echo=TRUE}
T.TestDose0.5 <- t.test(len ~ supp, data = Dose0.5)
T.TestDose0.5
```
## T.test on the data with 1.0 Dose
```{r,echo=TRUE}
T.TestDose1.0 <- t.test(len ~ supp, data = Dose1.0)
T.TestDose1.0
```
## T.test on the data with 2.0 Dose
```{r,echo=TRUE}
T.TestDose2.0 <- t.test(len ~ supp, data = Dose2.0)
T.TestDose2.0
```
## T.test on the ToothGrowth Data
```{r, echo=TRUE}
T.TestToothGrowth <- t.test(len ~ supp, data = ToothGrowth)
T.TestToothGrowth
```
data("ToothGrowth")
dim(ToothGrowth)
summary(ToothGrowth)
qplot(x = supp, y = len, data = ToothGrowth, facets = ~ dose,
main = "Tooth Growth by Supplement Type and Dosage", xlab="Supplement",
ylab = "Length of Tooth") + geom_boxplot(aes(fill = supp))
unique(ToothGrowth$dose)
Dose0.5 <- subset.data.frame(x = ToothGrowth, dose == 0.5)
Dose1.0 <- subset.data.frame(x = ToothGrowth, dose == 1.0)
Dose2.0 <- subset.data.frame(x = ToothGrowth, dose == 2.0)
T.TestDose0.5 <- t.test(len ~ supp, data = Dose0.5)
T.TestDose0.5
knitr::opts_chunk$set(warning = FALSE, message = FALSE,echo = TRUE)
library(ggplot2)
library(datasets)
data("ToothGrowth")
dim(ToothGrowth)
summary(ToothGrowth)
unique(ToothGrowth$dose)
qplot(x = supp, y = len, data = ToothGrowth, facets = ~ dose,
main = "Tooth Growth by Supplement Type and Dosage", xlab="Supplement",
ylab = "Length of Tooth") + geom_boxplot(aes(fill = supp))
Dose0.5 <- subset.data.frame(x = ToothGrowth, dose == 0.5)
Dose1.0 <- subset.data.frame(x = ToothGrowth, dose == 1.0)
Dose2.0 <- subset.data.frame(x = ToothGrowth, dose == 2.0)
T.TestDose0.5 <- t.test(len ~ supp, data = Dose0.5)
T.TestDose0.5
T.TestDose1.0 <- t.test(len ~ supp, data = Dose1.0)
T.TestDose1.0
T.TestDose2.0 <- t.test(len ~ supp, data = Dose2.0)
T.TestDose2.0
T.TestToothGrowth <- t.test(len ~ supp, data = ToothGrowth)
T.TestToothGrowth
knitr::opts_chunk$set(warning = FALSE, message = FALSE,echo = TRUE)
library(ggplot2)
library(datasets)
data("ToothGrowth")
dim(ToothGrowth)
summary(ToothGrowth)
unique(ToothGrowth$dose)
qplot(x = supp, y = len, data = ToothGrowth, facets = ~ dose,
main = "Tooth Growth by Supplement Type and Dosage", xlab="Supplement",
ylab = "Length of Tooth") + geom_boxplot(aes(fill = supp))
Dose0.5 <- subset.data.frame(x = ToothGrowth, dose == 0.5)
Dose1.0 <- subset.data.frame(x = ToothGrowth, dose == 1.0)
Dose2.0 <- subset.data.frame(x = ToothGrowth, dose == 2.0)
T.TestDose0.5 <- t.test(len ~ supp, data = Dose0.5)
T.TestDose0.5
T.TestDose1.0 <- t.test(len ~ supp, data = Dose1.0)
T.TestDose1.0
T.TestDose2.0 <- t.test(len ~ supp, data = Dose2.0)
T.TestDose2.0
T.TestToothGrowth <- t.test(len ~ supp, data = ToothGrowth)
T.TestToothGrowth
T.TestToothGrowth <- t.test(len ~ dose, data = ToothGrowth)
T.TestToothGrowth
T.TestToothGrowth <- t.test(len ~ dose, data = ToothGrowth)
T.TestToothGrowth
ToothGrowth$dose
